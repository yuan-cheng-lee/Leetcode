class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>result;
        for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                if(nums[i]+nums[j] == target)
                {
                    result.push_back(i);
                    result.push_back(j);
                    return result;
                }
            }
        }
        result[0] = -1;
        result[1] = -1;
        return result;
    }
};
/*
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map <int, int> hashmap;
        vector<int> out;
        for(int i=0;i<nums.size();i++)
        {
            int secondele=target-nums[i];
            if(hashmap.find(secondele)!=hashmap.end()&&hashmap.find(secondele)->second!=i)
            {
                out.push_back(i);
                out.push_back(hashmap.find(secondele)->second);
                return out;
            }
            hashmap.insert(pair<int,int>(nums[i],i));
        }
        out[0] = -1;
        out[1] = -1;
        return out;
    }
};*/
