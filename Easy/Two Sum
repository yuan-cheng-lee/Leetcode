class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>result(2,0);
        for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                if(nums[i]+nums[j] == target)
                {
                    //result.push_back(i);
                    //result.push_back(j);
                    result = {i,j};
                    return result;
                }
            }
        }
        return result;
    }
};

/*
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> hash ;
        auto end = hash.end();
        vector<int> solution(2,0);//有2個值為0的元素
        
        for(int i=0;i<nums.size();i++)
        {
            auto find = hash.find(target-nums[i]);
            
            if (find == end)
            {
                hash.emplace(nums[i],i);
            }
            else
            {
                solution = {find->second,i};
                
                return solution;
            }
        }
        return solution;
    }
};
*/
